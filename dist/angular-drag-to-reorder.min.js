/*
  angular-drag-to-reorder v0.0.2
  http://brandly.github.io/angular-drag-to-reorder/
*/
(function(){angular.module("mb-dragToReorder",[]).directive("dragToReorder",[function(){return{link:function(e,r,o){var a,n,t,s,d,i;if(null==e[o.dragToReorder])throw"Must specify the list to reorder";return n="dragging",r.attr("draggable",!0),r.on("dragstart",function(o){return r.addClass(n),o.dataTransfer.setData("text/plain",e.$index)}),r.on("dragend",function(){return r.removeClass(n)}),i="dropping",s="dropping-above",d="dropping-below",a=function(e){var o,a;return e.preventDefault(),a=e.offsetY||e.layerY,o=this.offsetTop-this.scrollTop+this.clientTop,a<o+this.offsetHeight/2?(r.removeClass(d),r.addClass(s)):(r.removeClass(s),r.addClass(d))},t=function(a){var n,l,f,u,g,p,v;if(a.preventDefault(),n=parseInt(a.dataTransfer.getData("text/plain"),10),g=e[o.dragToReorder],u=null,u=r.hasClass(s)?n<e.$index?e.$index-1:e.$index:n<e.$index?e.$index:e.$index+1,f=g[n],u>n)for(l=p=n;u>p;l=p+=1)g[l]=g[l+1];else if(n>u)for(l=v=n;v>u;l=v+=-1)g[l]=g[l-1];return g[u]=f,e.$apply(function(){return e.$emit("dragToReorder.reordered",{array:g,item:f,from:n,to:u})}),r.removeClass(i),r.removeClass(s),r.removeClass(d),r.off("drop",t)},r.on("dragenter",function(){return r.hasClass(n)?void 0:(r.addClass(i),r.on("dragover",a),r.on("drop",t))}),r.on("dragleave",function(){return r.removeClass(i),r.removeClass(s),r.removeClass(d),r.off("dragover",a),r.off("drop",t)})}}}])}).call(this);